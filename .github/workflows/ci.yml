name: Preview CI

env:
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

on:
  pull_request:
    branches:
      - develop

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "yarn"

      - name: Set yarn version
        id: set-version
        run: |
          yarn set version 4.1.1
          echo "YARN_VERSION=$(yarn -v)" >> $GITHUB_OUTPUT

      - name: Yarn cache - PnP
        uses: actions/cache@v4
        with:
          path: |
            .yarn/cache
            .pnp.*
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-${{ steps.set-version.outputs.YARN_VERSION }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-

      - name: Install dependencies
        run: yarn

      - name: Run build
        run: yarn build

  deploy-to-vercel:
    runs-on: ubuntu-latest
    outputs:
      statis: ${{ job.status }}
      preview_url: ${{ steps.deploy-vercel.outputs.preview_url }}
      currnent_time: ${{ steps.current-time.outputs.formattedTime }}
    needs: ci
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "yarn"

      - name: Set yarn version
        id: set-version
        run: |
          yarn set version 4.1.1
          echo "YARN_VERSION=$(yarn -v)" >> $GITHUB_OUTPUT

      - name: Yarn cache - PnP
        uses: actions/cache@v4
        with:
          path: |
            .yarn/cache
            .pnp.*
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-${{ steps.set-version.outputs.YARN_VERSION }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-

      - name: Install dependencies
        run: yarn

      - name: Deploy to Vercel
        id: deploy-vercel
        run: |
          npm install --global vercel@latest
          vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --token=${{ secrets.VERCEL_TOKEN }}
          vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} > vercel-output.txt
          echo "preview_url=$(cat vercel-output.txt)" >> $GITHUB_OUTPUT

      - name: Get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: "YYYY년 MM월 DD일 HH시 mm분"
          utcOffset: "+09:00"

  github-preview-comment:
    runs-on: ubuntu-latest
    needs: [deploy-to-vercel]
    steps:
      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v3
        with:
          comment-tag: ${{ github.event.number }}
          message: |

            🧷 Preview: ${{ needs.deploy-to-vercel.outputs.preview_url }}

            ⏰ Update: ${{ needs.deploy-to-vercel.outputs.currnent_time }}
